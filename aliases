
alias dh='dirs -v'
alias ltr='ls -ltr'
alias ls='ls --color'
alias l='ls -lh'
alias ll='ls -la'

for c in cp rm chmod chown rename; do
    alias $c="$c -v"
done

#alias -g L="| less"
#alias -g C="| wc -l"

alias lh="ls -A --color=never | egrep '^\.' |xargs ls -lad --color=auto"

alias ..='cd ..'

alias apts="aptitude search"
alias apti="sudo aptitude install"
alias zyps="zypper search"
alias zypi="sudo zypper install"
alias tc="tree -C"

if command -v most > /dev/null 2>&1; then
    alias man="PAGER=most man"
    alias perldoc="PAGER=most perldoc"
fi

alias RM="rm -rf"
alias gst="git st"
alias gd="git di"
alias gadd="git add"

# git hub gist-new (public|secret) "description" file1 file2 ...
alias gist-secret="git hub gist-new secret"
alias gist-public="git hub gist-new public"

alias xxxcolor="export PERL_XXX_DUMPER=YAML::PP::Highlight"
alias xxxnocolor="export PERL_XXX_DUMPER=''"

# Remove ANSI color escapes
alias remcol="sed 's/\x1b\[[0-9;]*m//g'"

alias jsontoprettyyaml="yamlpp-load-dump --preserve 0 | yamlpp-highlight"
git-default-origin() {
    local remote_branch=$(git-default-branch-name)
    echo "${remote_branch%%/*}"
}
git-default-branch-name() {
    git branch -a | grep /HEAD | sed -e 's/.* //'
}
alias gitdb="git-default-branch-name"
git-rebase-head() {
    local remote_branch=$(git-default-branch-name)
    local br=${remote_branch##*/}
    git checkout $br && git rebase $remote_branch && git checkout -
}
alias grh="git-rebase-head"

git-fetch-origin() {
    local or=$(git-default-origin)
    echo "git fetch $or..."
    git fetch "$or"
}
alias gfo="git-fetch-origin"
git-checkout-default() {
    local remote_branch=$(git-default-branch-name)
    local br=${remote_branch##*/}
    git checkout $br
}
alias gcd="git-checkout-default"
alias gc-="git checkout -"
