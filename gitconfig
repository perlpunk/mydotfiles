# vim:set ft=gitconfig: #
# include like:
# [include]
#   path = mydotfiles/gitconfig
[color]
  diff = auto
  status = auto
  branch = auto

[core]
  editor = vim

[alias]
  ci = commit
  di = diff
  last = log -1 HEAD
  st = status -sb
  co = checkout
  lp = log -p
  glog = log --graph --decorate --all
  br = branch
  # commit count by author
  who = shortlog -s -n
  graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
  # ovid++
  stashed = "stash list --pretty=format:'%gd: %Cred%h%Creset %Cgreen[%ar]%Creset %s'"
  brv = "branch -avv"
  ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cgreen\\ [%cn]" --decorate
  ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cgreen\\ [%cn]\\ %Creset%ad" --decorate --numstat
  lds = log --pretty=format:"%C(yellow)%h\\ %C(cyan)%ad%Cred%d\\ %Creset%s%Cgreen\\ [%cn]" --decorate --date=short
  lga = log --pretty=format:"%C(yellow)%h\\ %C(cyan)%ad%Cred%d\\ %Creset%s%Cgreen\\ [%cn]" --decorate --date=short --graph --all
  lg = log --pretty=format:"%C(yellow)%h\\ %C(cyan)%ad%Cred%d\\ %Creset%s%Cgreen\\ [%cn]" --decorate --date=short --graph
  ld = log --pretty=format:"%C(yellow)%h\\ %C(cyan)%ad%Cred%d\\ %Creset%s%Cgreen\\ [%cn]" --decorate --date=relative
  le = log --oneline --decorate
  f = "!git ls-files | grep -i"
  la = "!git config -l | grep alias | cut -c 7-"

[push]
#  default = simple

[url "ssh://git@github.com/"]
  insteadOf = gh://

# add parts of files
# git add -p ...

# git log --date=relative

# alias myclone="git clone --config user.email 'foo@example.org'"
# git rev-parse --show-toplevel
# git push origin --delete <branchName> # v1.7.0
# git config --global core.pager 'less -r'

# http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
